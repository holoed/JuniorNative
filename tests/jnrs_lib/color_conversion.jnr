let hsvToRgb (h, s, v) = 
  let scale x = truncate (x * 255) in
  let rgb r g b = (scale r, scale g, scale b) in
  if s == 0 then rgb v v v 
  else let h' = h / 60 in
       let i = truncate h' in
       let f = h' - toDouble i in
       let p = v * (1 - s) in
       let q = v * (1 - s * f) in
       let t = v * (1 - s * (1 - f)) in
       if i == 0 then rgb v t p else
       if i == 1 then rgb q v p else 
       if i == 2 then rgb p v t else
       if i == 3 then rgb p q v else  
       if i == 4 then rgb t p v else
       if i == 5 then rgb v p q else
       rgb 0 0 0

let primary = hsvToRgb (0, 1, 1) :
              hsvToRgb (120, 1, 1) :  
              hsvToRgb (240, 1, 1) : []
            
let colors = hsvToRgb (0, 0, 0.5) :
             hsvToRgb (0, 1, 0.5) : 
             hsvToRgb (0, 0.5, 1) : []

let main = (primary, colors) 